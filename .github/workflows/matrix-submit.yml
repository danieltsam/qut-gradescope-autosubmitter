name: Matrix Gradescope Submissions

on:
  workflow_dispatch:
    inputs:
      submissions:
        description: 'JSON array of submissions (e.g., [{"course":"cab201","assignment":"t6q1"},{"course":"cab202","assignment":"lab1"}])'
        required: true
        default: '[{"course":"cab201","assignment":"t6q1"}]'
        type: string
  push:
    branches: [ main, master ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - '.github/**'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup-matrix.outputs.matrix }}
    steps:
    - name: Setup matrix
      id: setup-matrix
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          # Use custom matrix from input
          echo "matrix=${{ github.event.inputs.submissions }}" >> $GITHUB_OUTPUT
        else
          # Use default matrix for push events
          echo 'matrix=[{"course":"${{ vars.GRADESCOPE_COURSE }}","assignment":"${{ vars.GRADESCOPE_ASSIGNMENT }}"}]' >> $GITHUB_OUTPUT
        fi

  submit:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        submission: ${{ fromJson(needs.setup.outputs.matrix) }}
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install Rich and other dependencies first to avoid TestPyPI issues
        pip install playwright pyyaml python-dotenv click rich
        pip install -i https://test.pypi.org/simple/ qut-gradescope-autosubmitter
        playwright install chromium
        
    - name: System check
      run: |
        echo "🔍 Running matrix submission diagnostics..."
        gradescope doctor
        echo "✅ System check completed"
        
    - name: Create config file
      run: |
        cat > gradescope.yml << EOF
        course: ${{ matrix.submission.course }}
        assignment: ${{ matrix.submission.assignment }}
        zip_name: submission-${{ matrix.submission.course }}-${{ matrix.submission.assignment }}.zip
        bundle: ['*']
        notify_when_graded: false
        headless: true
        EOF
        
        echo "📄 Matrix config file created for ${{ matrix.submission.course }}/${{ matrix.submission.assignment }}:"
        cat gradescope.yml
        
    - name: Validate configuration
      run: |
        echo "🔧 Validating matrix configuration..."
        gradescope validate
        echo "✅ Configuration valid"
        
    - name: Submit to Gradescope
      env:
        GRADESCOPE_USERNAME: ${{ secrets.GRADESCOPE_USERNAME }}
        GRADESCOPE_PASSWORD: ${{ secrets.GRADESCOPE_PASSWORD }}
      run: |
        echo "🎯 Starting matrix submission for ${{ matrix.submission.course }}/${{ matrix.submission.assignment }}..."
        gradescope submit --headless --no-grade-wait --fresh-login
        echo "✅ Matrix submission completed"
        
    - name: Upload submission artifact
      uses: actions/upload-artifact@v3
      with:
        name: matrix-submission-${{ matrix.submission.course }}-${{ matrix.submission.assignment }}-${{ github.run_number }}
        path: submission-${{ matrix.submission.course }}-${{ matrix.submission.assignment }}.zip
        retention-days: 30
